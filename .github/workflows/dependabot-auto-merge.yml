name: Dependabot Auto Merge

on:
  pull_request_target:
    branches: ["main"]
    types: [opened, reopened, synchronize]

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  run-ci:
    name: Execute CI for Dependabot
    if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'
    uses: ./.github/workflows/ci.yml
    with:
      ref: ${{ github.event.pull_request.head.sha }}
    secrets: inherit

  orchestrate:
    name: Merge or downgrade
    needs: run-ci
    if: (github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]') && always()
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: write

    steps:
      - name: Merge Dependabot PR
        if: needs.run-ci.result == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.DEPENDABOT_AUTOMERGE_TOKEN != '' && secrets.DEPENDABOT_AUTOMERGE_TOKEN || github.token }}
          script: |
            const pr = context.payload.pull_request;
            await github.rest.pulls.merge({
              owner: pr.base.repo.owner.login,
              repo: pr.base.repo.name,
              pull_number: pr.number,
              merge_method: 'squash'
            });
            await github.rest.issues.createComment({
              owner: pr.base.repo.owner.login,
              repo: pr.base.repo.name,
              issue_number: pr.number,
              body: 'CI succeeded automatically. Merging this Dependabot update. :robot:'
            });

      - name: Checkout PR branch
        if: needs.run-ci.result == 'failure'
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.DEPENDABOT_AUTOMERGE_TOKEN != '' && secrets.DEPENDABOT_AUTOMERGE_TOKEN || github.token }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Fetch base branch
        if: needs.run-ci.result == 'failure'
        run: git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1

      - name: Set up Python
        if: needs.run-ci.result == 'failure'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Attempt downgrade
        if: needs.run-ci.result == 'failure'
        id: downgrade
        run: |
          python .github/scripts/dependabot_adjust.py downgrade \
            --base-ref origin/${{ github.event.pull_request.base.ref }} \
            --output "$GITHUB_OUTPUT"

      - name: Commit downgrade
        if: needs.run-ci.result == 'failure' && steps.downgrade.outputs.status == 'modified'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -am "chore: downgrade ${{ steps.downgrade.outputs.dependency }} to ${{ steps.downgrade.outputs.new_version }}"

      - name: Push downgrade commit
        if: needs.run-ci.result == 'failure' && steps.downgrade.outputs.status == 'modified'
        run: |
          git push origin HEAD:${{ github.event.pull_request.head.ref }}

      - name: Close exhausted PR
        if: needs.run-ci.result == 'failure' && steps.downgrade.outputs.status == 'exhausted'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.DEPENDABOT_AUTOMERGE_TOKEN != '' && secrets.DEPENDABOT_AUTOMERGE_TOKEN || github.token }}
          script: |
            const pr = context.payload.pull_request;
            await github.rest.issues.createComment({
              owner: pr.base.repo.owner.login,
              repo: pr.base.repo.name,
              issue_number: pr.number,
              body: 'CI failed for every available downgrade step. Closing this Dependabot PR for manual follow-up.'
            });
            await github.rest.pulls.update({
              owner: pr.base.repo.owner.login,
              repo: pr.base.repo.name,
              pull_number: pr.number,
              state: 'closed'
            });

      - name: Flag unsupported update
        if: needs.run-ci.result == 'failure' && steps.downgrade.outputs.status == 'skipped'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.DEPENDABOT_AUTOMERGE_TOKEN != '' && secrets.DEPENDABOT_AUTOMERGE_TOKEN || github.token }}
          script: |
            const pr = context.payload.pull_request;
            await github.rest.issues.createComment({
              owner: pr.base.repo.owner.login,
              repo: pr.base.repo.name,
              issue_number: pr.number,
              body: 'Dependabot update could not be auto-downgraded. Please review manually.'
            });
